---
_model: blog-post
---
title: PHP es lo suficientemente rápido
---
date: 2014-06-26 14:35:57 +0200
---
author: Mario Alberich
---
categories: informatica
---
tags: php,benchmarking,hhvm
---
body:

<p>Desde hace aproximadamente unos dos a&ntilde;os he estado <em>flirteando</em> con alternativas a PHP, en especial NodeJS.&nbsp; El motivo principal ha sido conocer otras soluciones con una aproximación diferente a los problemas que plantea el entorno web en general, y la potencial mejora que supone compartir el mismo lenguaje de programación en el entorno cliente y el servidor. Python también está en la lista de <em>flirteos</em>, aunque debo decir que a cierta distancia.</p>
<p>El atractivo por NodeJS es (y en parte seguirá siendo) un enfoque diferente para la operativa en los cuellos de botella de las aplicaciones web. Al poder tratar las operaciones I/O de una forma asíncrona (eventos y callbacks), es un valor a&ntilde;adido en ciertos casos.&nbsp; El enfoque asíncrono de NodeJS permite una ejecución más fluida, que a su vez permite combinar consultas exigentes con el trabajo paralelo mientras se espera a la finalización de estas tareas.&nbsp; Además, una orientación a eventos, soluciones PubSub y otras características derivadas hacen pensar en NodeJS como una opción más que interesante para ciertas soluciones del entorno cloud.</p>
<h2>Velocidad del código, velocidad del desarrollo</h2><br />
Pero quizá el enfoque que más aporta NodeJS, y por el cual también llegué a introducirme en el mundo del PHP fue la velocidad a la hora de desarrollar, y la agilidad para realizar cambios.&nbsp; Hace unos meses leí el artículo&nbsp;<a title="PHP PPHP Performance: "fast enough" and improvingerformance: "fast enough" and improving" href="https://www.acquia.com/blog/php-performance-fast-enough-and-improving-jonathan-klein">PHP Performance: "fast enough" and improving</a>, que pone énfasis en ese punto.</p>
<p>PHP tiene y tendrá infinidad de defectos, pero por alguna razón es <a href="http://w3techs.com/technologies/overview/programming_language/all">el lenguaje más utilizado para aplicaciones web</a>.&nbsp; La razón es sencilla: es fácil empezar el desarrollo con PHP, no requiere una curva de aprendizaje como Java. En una palabra, funciona.</p>
<p>Pero la propia evolución de PHP no ha sido nada sencilla. El paso de la versión 4 a la 5 supuso un salto bastante difícil de seguir, y la introducción gradual de los Frameworks primero (empujado probablemente por actores como Ruby on Rails),&nbsp; y en especial de los <a href="http://www.php-fig.org/psr/">PSR</a>, parece haber dividido una comunidad que debate entre la necesidad de estructurar y madurar el lenguaje, o mantenerlo en ese nivel de libertad que ha tenido desde sus inicios. Probablemente la aparición de lenguajes como Ruby (y RoR) como Python ha dado más empuje a la primera alternativa. Sinceramente lo desconozco.</p>
<p>Por último, la aparición de HipHop primero, y de <a title="#hhvm en #magento y #symfony" href="http://www.sopadebits.com/hhvm-magento-symfony">HHVM</a> después, han dado un empuje a la velocidad de carga de las aplicaciones PHP, con una integración completa (o casi) en <a href="http://hhvm.com/frameworks/">muchas aplicaciones</a> del ecosistema PHP,entre las cuales destacaría algunos casos clave, como Drupal, MediaWiki y Magento 2.</p>
<p>Es posible que las próximas versiones de PHP incorporen más mejoras en el rendimiento. &iquest;El mismo que Java? Probablemente no, pero seguro que a la par con NodeJS y mejor que otros lenguajes interpretados. Dependerá del uso que se le dé. En realidad, se puede descartar a PHP por varios motivos, pero en pocos casos ése será el de su rendimiento.</p>
<h2>Los nuevos entornos</h2><br />
Es innegable que PHP no está pensado para ciertos otros entornos, como son las aplicaciones móviles (aunque sí <a href="http://venturebeat.com/2012/10/23/huge-news-php-developers-can-now-design-build-and-publish-mobile-apps-right-in-zend-studio/">parece teóricamente posible</a>). Ahí es donde en parte entra un lenguaje como Javascript (vía <a href="http://angularjs.org/">AngularJS</a>, <a title="Ionic Framework" href="http://ionicframework.com/">Ionic Framework</a> y/o similares).</p>
<p>No pienso en Javascript como algo que deba convertirse en un lenguaje de programación para todos los usos, <strong>pero sí para cualquiera</strong>. Si un lenguaje permite moverme en varios entornos a la vez (navegador, servidor, aplicación móvil o <a href="https://github.com/rogerwang/node-webkit">de escritorio con node-webkit</a>), eso es algo de valorar si por un lado se quiere prototipar y producir un resultado sin detenerse en los detalles del tipado de datos, o en un requerimiento de un extremo rendimiento o de extrema fiabilidad en algunos procesos.</p>
<p>Cada proyecto es diferente, pero PHP, como afirma el artículo comentado más arriba, es lo suficientemente rápido y maduro para ser un gran candidato.</p>

---